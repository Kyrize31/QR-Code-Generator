Buat projek laravel dengan masuk ke direktori dimana Anda ingin membuat project laravel tersebut. Sama seperti petunjuk dari laravel, kita bisa membuat projek baru dengan command seperti di bawah ini.
composer create-project laravel/laravel nama-project

Jika projek laravel sudah berhasil dibuat, selanjutnya masuk ke direktori projek tersebut dan jalankan command dari Simple QRcode seperti di bawah ini.
composer require simplesoftwareio/simple-qrcode

Buat file controller baru dengan command seperti di bawah ini.
php artisan make:controller DataController

Kemudian buat model sekaligus file migrate untuk membuat table penampung data yang akan di generate menjadi QRcode. Command untuk membuat model/migrate tersebut bisa dilihat seperti di bawah ini.
php artisan make:model Data -m

Buka file Data Migrate yang ada di folder database > migrations dan edit sehingga menjadi seperti di bawah ini.
<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateDataTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('data', function (Blueprint $table) {
            $table->id();
            $table->string('name');
            $table->string('email');
            $table->bigInteger('phone');
            $table->timestamps();
        });
    }
    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('data');
    }
}

Buat database baru di phpmyadmin, adminer, laragon atau yang lainnya.

Sesuaikan DB_DATABASE di file .env dengan nama database yang baru dibuat.

Jika database baru sudah dibuat, kembali ke terminal dan jalankan command dibawah ini.
“php artisan migrate”

Buka file DataController yang sudah dibuat pada langkah ke 3 tadi, kemudian edit code menjadi seperti di bawah ini.
<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use SimpleSoftwareIO\QrCode\Facades\QrCode;
use App\Models\Data;

class DataController extends Controller
{
    public function index()
    {
        $data = Data::all();
        return view('welcome', ['data' => $data]);
    }
    public function store(Request $request)
    {
        $data = new Data;
        $data->name = $request->name;
        $data->email = $request->email;
        $data->phone = $request->phone;
        $data->save();
        return back();
    }
    public function generate($id)
    {
        $data = Data::findOrFail($id);
        $qrcode = QrCode::size(400)->generate("Name: $data->name, Email: $data->email, Phone: $data->phone");
        return view('qrcode', compact('qrcode'));
    }
}


NB:
- Function index berfungsi untuk menampilkan data-data dari database (table data).
- Function store berfungsi untuk menambahkan data baru ke dalam table data (model Data).
- Function generate berfungsi untuk membuat QRcode dari data yang ingin di generate menjadi QR code (nama, email atau phone number).
	
Buka file web.php yang ada di folder routes, kemudian edit menjadi seperti di bawah ini.
<?php

use Illuminate\Support\Facades\Route;
use App\Http\Controllers\DataController;

Route::get('/', [DataController::class, 'index']);
Route::post('/', [DataController::class, 'store'])->name('store');
Route::get('qrcode/{id}', [DataController::class, 'generate'])->name('generate');

Buka file welcome.blade.php yang ada di folder views, kemudian edit menjadi seperti di bawah ini.
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Laravel</title>
        <!-- Fonts -->
        <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap" rel="stylesheet">
        <!-- Styles -->
        <style>
            /* Background & body */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    background: radial-gradient(circle, transparent 20%, #d94164 20%, #d94164 80%, transparent 80%, transparent) 0% 0% / 100px 100px, radial-gradient(circle, transparent 20%, #d94164 20%, #d94164 80%, transparent 80%, transparent) 50px 50px / 100px 100px, linear-gradient(#e8f9ff 10px, transparent 10px) 0px -5px / 50px 50px, linear-gradient(90deg, #e8f9ff 10px, #d94164 10px) -5px 0px / 50px 50px #d94164;
    background-size: 100px 100px, 100px 100px, 50px 50px, 50px 50px;
    background-color: #d94164;
    margin: 0;
    width: 100%;
    height: 100vh;
    font-family: 'Nunito', sans-serif;
}

/* Container utama */
.container {
    width: 50rem;
    background: rgba(255, 255, 255, 0.15);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border-radius: 10px;
    padding: 20px;
}

/* Form styling */
form {
    display: flex;
    flex-wrap: wrap;
    gap: 25px; /* Menambahkan jarak antar elemen */
    justify-content: center;
    padding-bottom: 10px;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 5px;
    font-size: 14px;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    outline: none;
    margin: 5px 0; /* Memberikan jarak atas-bawah untuk input */
}

.form-group input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

button {
    background-color: #ff0050;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: 0.3s;
}

button:hover {
    background-color: #810029;
}

/* Table styling */
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 5px;
    overflow: hidden;
}

th, td {
    padding: 10px;
    text-align: center;
    color: white;
}

th {
    background-color: #ff0050;
    color: white;
}

td a {
    text-decoration: none;
    color: white;
    background-color: #ff0050;
    padding: 5px 10px;
    border-radius: 5px;
    transition: 0.3s;
}

td a:hover {
    background-color: #810029;
}

h2 {
    color: white;
    text-align: center;
}

/* Responsif untuk layar kecil */
@media (max-width: 600px) {
    .container {
        width: 90%;
    }

    form {
        flex-direction: column;
    }

    .form-group input {
        width: 100%;
    }
}

        </style>
    </head>
    <body>
        <div class="container">
            <div class="row mt-5">
                <h2>Form QR Code</h2>
                <form class="form-inline" action="{{ route('store') }}" method="POST">
                    @csrf
                    <div class="form-group mb-2">
                      <input type="text" class="form-control" name="name" placeholder="Masukkan Nama">
                    </div>
                    <div class="form-group mb-2 ml-1">
                        <input type="email" class="form-control" name="email" placeholder="Masukkan Email">
                      </div>
                      <div class="form-group mb-2 ml-1">
                        <input type="number" class="form-control" name="phone" placeholder="Masukkan Nomor Telephone">
                      </div>
                    <button type="submit" class="btn btn-primary ml-1 mb-2">Create</button>
                  </form>
                <h2>List QR Code</h2>
                <table class="table">
                    <thead>
                      <tr>
                        <th scope="col">Nama</th>
                        <th scope="col">Email</th>
                        <th scope="col">Phone</th>
                        <th scope="col">QR code</th>
                      </tr>
                    </thead>
                    <tbody>
                     @foreach ($data as $data)
                     <tr>
                        <td>{{ $data->name }}</td>
                        <td>{{ $data->email }}</td>
                        <td>{{ $data->phone }}</td>
                        <td>
                            <a href="{{ route('generate',$data->id) }}" class="btn btn-primary">Generate</a>
                        </td>
                      </tr>
                     @endforeach
                    </tbody>
                  </table>
            </div>
        </div>
    </body>
</html>

Buat file view baru di dalam folder views dengan nama qrcode.blade.php untuk menampilkan QR code nantinya. Kemudian tambahkan code di bawah ini ke file view baru tersebut.
<!DOCTYPE html>
<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>Laravel</title>
        <!-- Fonts -->
        <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap" rel="stylesheet">
        <!-- Styles -->
        <style>
            /* Background & body */
body {
    display: flex;
    justify-content: center;
    align-items: center;
    background: radial-gradient(circle, transparent 20%, #d94164 20%, #d94164 80%, transparent 80%, transparent) 0% 0% / 100px 100px, radial-gradient(circle, transparent 20%, #d94164 20%, #d94164 80%, transparent 80%, transparent) 50px 50px / 100px 100px, linear-gradient(#e8f9ff 10px, transparent 10px) 0px -5px / 50px 50px, linear-gradient(90deg, #e8f9ff 10px, #d94164 10px) -5px 0px / 50px 50px #d94164;
    background-size: 100px 100px, 100px 100px, 50px 50px, 50px 50px;
    background-color: #d94164;
    margin: 0;
    width: 100%;
    height: 100vh;
    font-family: 'Nunito', sans-serif;
}

/* Container utama */
.container {
    display: flex;
    flex-direction: column; /* Tambahkan ini agar item dalam container ditata secara vertikal */
    justify-content: center;
    align-items: center;
    background: rgba(255, 255, 255, 0.15);
    box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);
    backdrop-filter: blur(15px);
    -webkit-backdrop-filter: blur(15px);
    border-radius: 10px;
    padding: 20px;
}

/* Center QR Code */
.row {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%; /* Pastikan QR Code berada di tengah */
}

/* Form styling */
form {
    display: flex;
    flex-wrap: wrap;
    gap: 25px; /* Menambahkan jarak antar elemen */
    justify-content: center;
    padding-bottom: 10px;
}

.form-group input {
    width: 100%;
    padding: 10px;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 5px;
    font-size: 14px;
    background: rgba(255, 255, 255, 0.2);
    color: white;
    outline: none;
    margin: 5px 0; /* Memberikan jarak atas-bawah untuk input */
}

.form-group input::placeholder {
    color: rgba(255, 255, 255, 0.7);
}

button {
    background-color: #ff0050;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 14px;
    transition: 0.3s;
}

button:hover {
    background-color: #810029;
}

/* Table styling */
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 5px;
    overflow: hidden;
}

th, td {
    padding: 10px;
    text-align: center;
    color: white;
}

th {
    background-color: #ff0050;
    color: white;
}

td a {
    text-decoration: none;
    color: white;
    background-color: #ff0050;
    padding: 5px 10px;
    border-radius: 5px;
    transition: 0.3s;
}

td a:hover {
    background-color: #810029;
}

h2 {
    color: white;
    text-align: center;
}

/* Responsif untuk layar kecil */
@media (max-width: 600px) {
    .container {
        width: 90%;
    }

    form {
        flex-direction: column;
    }

    .form-group input {
        width: 100%;
    }
}

        </style>
    </head>
    <body>
        <div class="container">
            <h2>Scan QR Code Here</h2>
            <div class="row mt-5">
                {!! $qrcode !!}
            </div>
        </div>
    </body>
</html>

Oke, sekarang kita coba jalankan programnya dengan menjalankan server (php artisan serve). Buka url 127.0.0.1:8000 atau qrcode.test.
“SS”

Tampilan halaman depan atau dari file welcome.blade.php akan seperti gambar di atas, selanjutnya kita coba dengan input data pada 3 form yang ada yaitu nama, email, phone number dan kemudian klik create untuk menambahkan data tersebut.
“SS”

Untuk melihat QR code dari beberapa data yang ada, tekan tombol Generate. Maka akan menampilkan QR code dari data tersebut seperti yang bisa dilihat pada gambar di atas.
“SS”

Jika kita coba scan pakai scanner hp atau yang lain maka ketika scanner menangkap QR code tersebut kita akan didirect ke halaman dengan tampilan seperti gambar di atas.

Demikian mengenai cara membuat QR code dengan Simple QR code di laravel, untuk lebih lengkapnya mengenai penggunaan Simple QR code ini, silahkan kunjungi di website resmi Simple QR code di simplesoftware.io.
